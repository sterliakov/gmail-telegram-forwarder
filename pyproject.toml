[dependency-groups]
dev = [
    "mypy>=1.13.0",
    "types-requests>=2.32.0.20241016",
]

[project]
dependencies = [
    "google>=3.0.0",
    "google-api-python-client>=2.151.0",
    "google-auth-oauthlib>=1.2.1",
    "requests>=2.32.3",
    "pynamodb>=6.0.1",
    "fastapi>=0.115.4",
    "pydantic>=2.9.2",
]
description = "Forward incoming GMail emails to Telegram."
name = "gmail_telegram"
requires-python = ">=3.11.7"
version = "0.1.0"

[tool.ruff]
preview = true
target-version = 'py312'

[tool.ruff.analyze]
detect-string-imports = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
exclude = [
    ".svn",
    "CVS",
    ".bzr",
    ".hg",
    ".git",
    "__pycache__",
    ".tox",
    ".nox",
    ".eggs",
    "*.egg",
    "migrations",
    "manage.py",
]
extend-ignore = [
    "EM101",  # Exception must not use a string literal, assign to variable first
    "EM102",  # Exception must not use an f-string literal, assign to variable first
    "TRY003",  # Avoid specifying long messages outside the exception class
    "RUF012",  # Mutable class attributes should be annotated with `typing.ClassVar`
    "TCH003",  # Move standard library import `XXX` into a type-checking block
    "ANN",  # Type hints
    "D",  # Docstrings
    "TD",  # To-do comment lints
    "FIX",  # Line contains TODO/FIXME/HACK, consider resolving the issue
    "DOC",  # Docstrings
    "CPY",  # copyright
    "PLR6301",  # Method `xxx` could be a function, class method, or static method
    "E501",  # Let black care about line width, if not splitable - go on
    # conflicts with ruff-fmt
    "COM812",
]
select = ['ALL']

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
known-first-party = ["gmail_telegram"]
required-imports = ["from __future__ import annotations"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
split-on-trailing-comma = false

[tool.uv]
compile-bytecode = true
# dev-dependencies = []
link-mode = "copy"
